import{_ as s,c as n,o as a,a as l}from"./app.17aa78ac.js";const D=JSON.parse('{"title":"The X functions","description":"","frontmatter":{},"headers":[],"relativePath":"intro/code-generators/the-x-function.md","lastUpdated":1671213854000}'),o={name:"intro/code-generators/the-x-function.md"},e=l(`<h1 id="the-x-functions" tabindex="-1">The X functions <a class="header-anchor" href="#the-x-functions" aria-hidden="true">#</a></h1><p><code>Expronicon</code> provides a set of functions that can be used to generate certain Julia expressions to give you better readability and correctness. The functions are named with a <code>x</code> prefix with similar name as <code>Base</code> functions or expression head.</p><p>For example, the <code>xprintln</code> function is similar to <code>println</code> but it returns an expression</p><div class="language-julia"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">julia</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">xprintln</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">:((Base)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span></code></pre></div><p>This will allow you to use string interpolation instead of expression interpolation easily</p><div class="language-julia"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">julia</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">xprintln</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello </span><span style="color:#A6ACCD;">$(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">:((Base)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello 3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span></code></pre></div><p>the following are the list of functions that are provided</p><div class="language-julia"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">xtuple</span></span>
<span class="line"><span style="color:#A6ACCD;">xnamedtuple</span></span>
<span class="line"><span style="color:#A6ACCD;">xcall</span></span>
<span class="line"><span style="color:#A6ACCD;">xpush</span></span>
<span class="line"><span style="color:#A6ACCD;">xgetindex</span></span>
<span class="line"><span style="color:#A6ACCD;">xfirst</span></span>
<span class="line"><span style="color:#A6ACCD;">xlast</span></span>
<span class="line"><span style="color:#A6ACCD;">xprint</span></span>
<span class="line"><span style="color:#A6ACCD;">xprintln</span></span>
<span class="line"><span style="color:#A6ACCD;">xmap</span></span>
<span class="line"><span style="color:#A6ACCD;">xmapreduce</span></span>
<span class="line"><span style="color:#A6ACCD;">xiterate</span></span>
<span class="line"></span></code></pre></div>`,8),p=[e];function t(c,r,i,C,A,y){return a(),n("div",null,p)}const u=s(o,[["render",t]]);export{D as __pageData,u as default};
