import{_ as s,c as e,o as a,a as n}from"./app.b537f497.js";const h=JSON.parse('{"title":"Heuristics","description":"","frontmatter":{},"headers":[{"level":2,"title":"Guess type","slug":"guess-type","link":"#guess-type","children":[]},{"level":2,"title":"Guess module","slug":"guess-module","link":"#guess-module","children":[]}],"relativePath":"intro/analysis/heuristic.md","lastUpdated":1670998942000}'),o={name:"intro/analysis/heuristic.md"},l=n(`<h1 id="heuristics" tabindex="-1">Heuristics <a class="header-anchor" href="#heuristics" aria-hidden="true">#</a></h1><p>There are some analysis tools that are not based on official definitions, but on heuristics. These are not guaranteed to be correct/accurate, but they can be useful in some cases.</p><h2 id="guess-type" tabindex="-1">Guess type <a class="header-anchor" href="#guess-type" aria-hidden="true">#</a></h2><p>The <code>guess_type</code> function tries to guess the type of an type expression.</p><div class="language-julia"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">julia</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">guess_type</span><span style="color:#A6ACCD;">(Main, :(Union{Float64, X}))</span></span>
<span class="line"><span style="color:#A6ACCD;">:(Union{Float64, X})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">julia</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">guess_type</span><span style="color:#A6ACCD;">(Main, :(Union{Float64, Int}))</span></span>
<span class="line"><span style="color:#A6ACCD;">Union{Float64, Int64}</span></span>
<span class="line"></span></code></pre></div><h2 id="guess-module" tabindex="-1">Guess module <a class="header-anchor" href="#guess-module" aria-hidden="true">#</a></h2><p>The <code>guess_module</code> function tries to guess the module of given expression <code>ex</code> (of a module) in module <code>m</code>. If <code>ex</code> is not a module, or cannot be determined return <code>nothing</code>.</p><div class="language-julia"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">julia</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">guess_module</span><span style="color:#A6ACCD;">(Main, :(Base))</span></span>
<span class="line"><span style="color:#A6ACCD;">Base</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">julia</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">guess_module</span><span style="color:#A6ACCD;">(Main, :(Base</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Test))</span></span>
<span class="line"><span style="color:#89DDFF;">:Test</span></span>
<span class="line"></span></code></pre></div>`,8),t=[l];function p(c,i,r,u,d,y){return a(),e("div",null,t)}const C=s(o,[["render",p]]);export{h as __pageData,C as default};
